
什么是装箱和拆箱？

装箱就是把值类型转成引用类型（堆上）
拆箱就是把引用类型转成值类型 

class Program
    {
        static void Main(string[] args)
        {
            /*
             * 什么是装箱？
             * 装箱：根据值类型的值，在堆上创建一个完整的引用类型对象，并返回对象的引用，是一种隐式转换。
             * 
             * 为什么要装箱？
             * 有时候需要将值类型转换为引用类型来进行统一的操作和统一的存储。
             * 
             * 装箱的本质？
             * 装箱的本质就是在堆上创建了引用类型的副本，新创建的引用类型和原来的值类型相互独立
            */
            
            //装箱示例

            int i = 3;
            object oi = null;
            oi = i;             //这就是传说中的装箱，在堆上创建了一个对象，有一定消耗

            Console.WriteLine("i=" + i + " oi=" + oi);
            oi = 7;//存储在堆中
            i = 10;//存储在栈中
                   //互相各不影响
            Console.WriteLine("i=" + i + " oi=" + oi);

            /*
             * 什么是拆箱？
             * 拆箱将装箱后的对象转换回值类型的过程，是一种显式转换。
             */
            
            //拆箱示例
            int j = (int)oi;
            Console.WriteLine("j=" + j);
        }
    }