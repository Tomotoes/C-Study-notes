const 的概念就是一个包含不能修改的值的变量。常数表达式是在编译时可被完全计算的表达式。因此不能从一个变量中提取的值来初始化常量。如果 const int a = b+1;b是一个变量，显然不能再编译时就计算出结果，所以常量是不可以用变量来初始化的。readonly 允许把一个字段设置成常量，但可以执行一些运算，可以确定它的初始值。因为 readonly 是在计算时执行的，当然它可以用某些变量初始化。readonly 是实例成员，所以不同的实例可以有不同的常量值，这使readonly更灵活。readonly 关键字与 const 关键字不同。1. const 字段只能在该字段的声明中初始化。readonly 字段可以在声明或构造函数中初始化。因此，根据所使用的构造函数，readonly 字段可能具有不同的值。2. const 字段是编译时常数，而 readonly 字段可用于运行时常数。3. const 默认就是静态的，而 readonly 如果设置成静态的就必须显示声明。4．const 对于引用类型的常数，可能的值只能是 string 和 null。readonly可以是任何类型总结const只能在初期就使用常量初始化好。对于每一次编译后的结果，const的值是固定的，而readonly的值是可以在运行的时候才确定值的~~

readonly修饰的字段，其初始化仅是固定了其引用（地址不能修改），但它引用的对象的属性是可以更改的。

readonly：表示这个字段只能在构造函数中赋值，或由初始化语句赋值。

readonly = read  + only 这不就是 只读吗。 就相当于 属性中 只有get 而没有set 

不过在此 set可以有 构造器 或者构造函数 替代。

