抽象类用做基类

不能被实例化

用途是派生出其他非抽象类

接口主要是实现多重继承

abstract 修饰符用于表示所修饰的类是不完整的，并且它只能用作基类。抽象类与非抽象类在以下方面是不同的：

抽象类不能直接实例化，并且对抽象类使用 new 运算符会导致编译时错误。

允许（但不要求）抽象类包含抽象成员。

抽象类不能被密封。

当从抽象类派生非抽象类时，这些非抽象类必须具体实现所继承的所有抽象成员，从而重写那些抽象成员。

简单点理解，抽象类是接口和普通类的过渡类型，处于半实现状态。 

abstract：抽象方法声明使用，是必须被派生类覆写的方法，抽象类就是用来被继承的；可以看成是没有实现体的虚方法；如果类中包含抽象方法，那么类就必须定义为抽象类，不论是否还包含其他一般方法；抽象类不能有实体的。

 abstract关键字只能用在抽象类中修饰方法，并且没有具体的实现。抽象方法的实现必须在派生类中使用override关键字来实现。

接口和抽象类:

最本质的区别：抽象类是一个不完全的类，是对对象的抽象，而接口是一种行为规范。

http://www.cnblogs.com/blsong/archive/2010/08/12/1798064.html
