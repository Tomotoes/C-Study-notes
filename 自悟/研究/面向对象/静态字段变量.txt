--怎么理解静态变量？

所有实例公用的一个变量

class Program
    {
        static int A;
        int B;
        static void Main(string[] args)
        {
		
            
            //静态成员通过类名调用，归类所有，全部变量
            Program.A=5;
            Console.WriteLine(A);

            //动态成员归对象所有，通过对象名调用，相当于结构体成员的用法
            Program a = new Program();
            Program b = new Program();
            Program c = a;//把a的地址 给对象c也就是说a对象 与 c对象共用一块地址！
            a.B = 5;//地址变量为5
            b.B = 3;
            c.B = 4;//地址变量为4
            Console.WriteLine(a.B + b.B);//输出7
            
        }
    }
  
静态成员将被 类的所有实例 共享，所有实例 都访问同一内存位置。

静态成员 和实例成员分开 保存 

静态成员保存在堆上面

都过类名调用 和 实例没有访问

并且 独立于任何实例

静态函数 不能访问实例成员 只能访问 其他静态成员


静态成员 可以用于 计数

记住 包含 静态成员 或者 字段的 方法函数 必须要求 同是 static！

